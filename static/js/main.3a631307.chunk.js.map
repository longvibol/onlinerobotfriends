{"version":3,"sources":["components/Card.js","components/CardList.js","components/SearchBox.js","components/ErrorBoundry.js","components/Scroll.js","containers/App.js","reportWebVitals.js","index.js"],"names":["Card","name","email","id","className","alt","src","CardList","robots","cardArray","map","user","i","SearchBox","searchfield","searchChange","type","placeholder","onChange","ErrorBoundry","props","state","hasError","error","info","this","setState","children","Component","Scroll","style","overflowY","border","height","App","onSearchChange","event","target","value","fetch","then","response","json","users","filteredRobots","filter","robot","toLowerCase","includes","length","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"6MAceA,EAZF,SAAC,GAAyB,IAAvBC,EAAsB,EAAtBA,KAAMC,EAAgB,EAAhBA,MAAOC,EAAS,EAATA,GAC5B,OACC,sBAAKC,UAAY,sDAAjB,UACC,qBAAKC,IAAI,SAASC,IAAG,+BAA0BH,EAA1B,mBACrB,gCACC,6BAAKF,IACL,4BAAIC,WCSOK,EAdE,SAAC,GAAiB,IAAdC,EAAa,EAAbA,OAIpB,IAAMC,EAAYD,EAAOE,KAAI,SAACC,EAAMC,GACnC,OAAO,cAAC,EAAD,CAAMT,GAAIK,EAAOI,GAAGT,GAAIF,KAAMO,EAAQI,GAAGX,KAAMC,MAAOM,EAAOI,GAAGV,WAExE,OACC,8BACGO,KCIUI,EAbG,SAAC,GAAgC,EAA/BC,YAAgC,IAAnBC,EAAkB,EAAlBA,aACjC,OACC,qBAAKX,UAAU,MAAf,SACC,uBACCA,UAAU,mCACVY,KAAO,SACPC,YAAc,qBACdC,SAAUH,OCWEI,E,kDAlBd,WAAYC,GAAQ,IAAD,8BAClB,cAAMA,IACDC,MAAO,CACXC,UAAU,GAHO,E,qDAOpB,SAAkBC,EAAOC,GACxBC,KAAKC,SAAS,CAAEJ,UAAU,M,oBAE1B,WACC,OAAIG,KAAKJ,MAAMC,SACP,0DAEDG,KAAKL,MAAMO,a,GAfOC,aCOZC,EAPA,SAACT,GACf,OACC,qBAAKU,MAAO,CAAEC,UAAW,SAAUC,OAAQ,kBAAmBC,OAAQ,SAAtE,SACEb,EAAMO,YC+CKO,E,kDA5Cd,aAAgB,IAAD,8BAEd,gBAgBDC,eAAiB,SAACC,GAEjB,EAAKV,SAAS,CAAEZ,YAAasB,EAAMC,OAAOC,SAhB1C,EAAKjB,MAAQ,CACZb,OAAQ,GACRM,YAAa,IANA,E,qDAUf,WAAsB,IAAD,OACpByB,MAAM,8CACLC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GAAU,EAAKjB,SAAS,CAAElB,OAAQmC,S,oBASzC,WAAU,IAAD,EACwBlB,KAAKJ,MAA7Bb,EADA,EACAA,OAAQM,EADR,EACQA,YACV8B,EAAiBpC,EAAOqC,QAAO,SAAAC,GACrC,OAAOA,EAAM7C,KAAK8C,cAAcC,SAASlC,EAAYiC,kBAItD,OAAQvC,EAAOyC,OAEZ,sBAAK7C,UAAU,KAAf,UACC,oBAAIA,UAAU,KAAd,yBACA,cAAC,EAAD,CAAWW,aAAcU,KAAKU,iBAC9B,cAAC,EAAD,UACC,cAAC,EAAD,UACA,cAAC,EAAD,CAAU3B,OAAQoC,WAPC,gD,GA9BPhB,aCKHsB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBZ,MAAK,YAAkD,IAA/Ca,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,O,MCCdO,IAASC,OACN,cAAC,EAAD,IACDC,SAASC,eAAe,SAK1BX,M","file":"static/js/main.3a631307.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst Card = ({ name, email, id }) => {\r\n\treturn (\r\n\t\t<div className = 'tc bg-light-green dib br3 pa3 ma2 grow bw2 shadow-5'>\r\n\t\t\t<img alt='robots' src={`https://robohash.org/${id}?size=200x200`} /> \t\t\r\n\t\t\t<div>\r\n\t\t\t\t<h2>{name}</h2>\r\n\t\t\t\t<p>{email}</p>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t\t);\r\n}\r\n\r\nexport default Card;","import React from 'react';\r\nimport Card from './Card';\r\n\r\nconst CardList = ( { robots }) => {\r\n\tif (false) {\r\n\t\tthrow new Error('Noooo!');\r\n\t}\r\n\tconst cardArray = robots.map((user, i) => {\r\n\t\treturn <Card id={robots[i].id} name={robots.[i].name} email={robots[i].email}/>\r\n\t}) \r\n\treturn (\r\n\t\t<div>\r\n\t\t\t{ cardArray }\r\n\t\t</div>\r\n\t); \r\n}\r\n\r\nexport default CardList;","import React from 'react';\r\n\r\n\r\nconst SearchBox = ({searchfield, searchChange}) => {\r\nreturn (\r\n\t<div className='pa2'>\r\n\t\t<input \r\n\t\t\tclassName='pa3 ba b--green bg-lightest-blue'\r\n\t\t\ttype = 'search' \r\n\t\t\tplaceholder = 'search robots test'\r\n\t\t\tonChange={searchChange}\r\n\t\t/>\r\n\t</div>\r\n\t);\r\n}\r\n\r\nexport default SearchBox;","import React, {Component} from 'react';\r\n\r\nclass ErrorBoundry extends Component {\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\t\tthis.state ={\r\n\t\t\thasError: false\r\n\t\t}\r\n\t}\r\n\r\ncomponentDidCatch(error, info) {\r\n\tthis.setState({ hasError: true})\r\n}\r\n\trender() {\r\n\t\tif (this.state.hasError) {\r\n\t\t\treturn <h1>Oooops. That is not good</h1>\r\n\t\t}\r\n\t\treturn this.props.children \r\n\t}\r\n}\r\n\r\nexport default ErrorBoundry;","import React from 'react';\r\n\r\nconst Scroll = (props)=> {\r\n\treturn (\r\n\t\t<div style={{ overflowY: 'scroll', border: '5px solid black', height: '600px'}}>\r\n\t\t\t{props.children} \r\n\t\t</div>\r\n\t);\r\n};\r\nexport default Scroll;","import React, { Component } from 'react';\r\nimport CardList from '../components/CardList'\r\nimport SearchBox from '../components/SearchBox';\r\nimport ErrorBoundry from '../components/ErrorBoundry'\r\nimport Scroll from '../components/Scroll';\r\n\r\n\r\nclass App extends Component {\r\n\tconstructor () {\r\n\t\t//use super when we want to use props in Component\r\n\t\tsuper()\r\n\t\t// state is the property in React to store what have change\r\n\t\tthis.state = {\r\n\t\t\trobots: [],\r\n\t\t\tsearchfield: ''\r\n\t\t}\r\n\t\t\r\n\t}\r\n\tcomponentDidMount () {\r\n\t\tfetch('https://jsonplaceholder.typicode.com/users')\r\n\t\t.then(response => response.json())\r\n\t\t.then(users => {this.setState({ robots: users})});\t\t\r\n\t}\r\n\r\n\r\n\t// onSearchChange is the new function we crate\r\n\tonSearchChange = (event )=> {\r\n\t\t//when we need to chage state use this :\r\n\t\tthis.setState({ searchfield: event.target.value})\r\n\t}\r\n\trender() {\r\n\t\tconst { robots, searchfield } = this.state;\r\n\t\tconst filteredRobots = robots.filter(robot => {\r\n\t\treturn robot.name.toLowerCase().includes(searchfield.toLowerCase());\r\n\t\t})\r\n\r\n\t// if (robots.length === 0) = if (!robots.length)\r\n\treturn !robots.length ? <h1>Loading...</h1> :\r\n\t\t\t( \r\n\t\t\t\t<div className='tc'>\r\n\t\t\t\t\t<h1 className='f1'>RoboFriends</h1>\r\n\t\t\t\t\t<SearchBox searchChange={this.onSearchChange}/>\r\n\t\t\t\t\t<Scroll>\r\n\t\t\t\t\t\t<ErrorBoundry>\t\t\t\t\t\t\r\n\t\t\t\t\t\t<CardList robots={filteredRobots}/>\r\n\t\t\t\t\t\t</ErrorBoundry>\r\n\t\t\t\t\t</Scroll>\r\n\t\t\t\t</div>\r\n\t\t\t);\t\r\n\t\t}\t\t\r\n}\r\n\r\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from '../src/containers/App'; \nimport reportWebVitals from './reportWebVitals';\nimport 'tachyons';\nimport { robots } from './robots';  \n\nReactDOM.render(\n\t\t\t<App />\n, document.getElementById('root')); \n\n// If you want to start measuring performance in your app, pass a  function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}